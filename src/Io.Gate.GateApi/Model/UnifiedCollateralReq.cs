/*
 * Gate API v4
 *
 * Welcome to Gate API  APIv4 provides spot, margin and futures trading operations. There are public APIs to retrieve the real-time market statistics, and private APIs which needs authentication to trade on user's behalf. 
 *
 * Contact: support@mail.gate.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Io.Gate.GateApi.Client.OpenAPIDateConverter;

namespace Io.Gate.GateApi.Model
{
    /// <summary>
    /// UnifiedCollateralReq
    /// </summary>
    [DataContract]
    public partial class UnifiedCollateralReq :  IEquatable<UnifiedCollateralReq>, IValidatableObject
    {
        /// <summary>
        /// 用户设置抵押物模式 0(all)-全部币种作为抵押物,1(custom)-自定义币种作为抵押物,collateral_type为0(all)时，enable_list与disable_list参数无效
        /// </summary>
        /// <value>用户设置抵押物模式 0(all)-全部币种作为抵押物,1(custom)-自定义币种作为抵押物,collateral_type为0(all)时，enable_list与disable_list参数无效</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum CollateralTypeEnum
        {
            /// <summary>
            /// Enum NUMBER_0 for value: 0
            /// </summary>
            NUMBER_0 = 0,

            /// <summary>
            /// Enum NUMBER_1 for value: 1
            /// </summary>
            NUMBER_1 = 1

        }

        /// <summary>
        /// 用户设置抵押物模式 0(all)-全部币种作为抵押物,1(custom)-自定义币种作为抵押物,collateral_type为0(all)时，enable_list与disable_list参数无效
        /// </summary>
        /// <value>用户设置抵押物模式 0(all)-全部币种作为抵押物,1(custom)-自定义币种作为抵押物,collateral_type为0(all)时，enable_list与disable_list参数无效</value>
        [DataMember(Name="collateral_type")]
        public CollateralTypeEnum? CollateralType { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="UnifiedCollateralReq" /> class.
        /// </summary>
        /// <param name="collateralType">用户设置抵押物模式 0(all)-全部币种作为抵押物,1(custom)-自定义币种作为抵押物,collateral_type为0(all)时，enable_list与disable_list参数无效.</param>
        /// <param name="enableList">币种列表，collateral_type&#x3D;1(custom)表示追加的逻辑.</param>
        /// <param name="disableList">取消列表，表示取消的逻辑.</param>
        public UnifiedCollateralReq(CollateralTypeEnum? collateralType = default(CollateralTypeEnum?), List<string> enableList = default(List<string>), List<string> disableList = default(List<string>))
        {
            this.CollateralType = collateralType;
            this.EnableList = enableList;
            this.DisableList = disableList;
        }

        /// <summary>
        /// 币种列表，collateral_type&#x3D;1(custom)表示追加的逻辑
        /// </summary>
        /// <value>币种列表，collateral_type&#x3D;1(custom)表示追加的逻辑</value>
        [DataMember(Name="enable_list")]
        public List<string> EnableList { get; set; }

        /// <summary>
        /// 取消列表，表示取消的逻辑
        /// </summary>
        /// <value>取消列表，表示取消的逻辑</value>
        [DataMember(Name="disable_list")]
        public List<string> DisableList { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class UnifiedCollateralReq {\n");
            sb.Append("  CollateralType: ").Append(CollateralType).Append("\n");
            sb.Append("  EnableList: ").Append(EnableList).Append("\n");
            sb.Append("  DisableList: ").Append(DisableList).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as UnifiedCollateralReq);
        }

        /// <summary>
        /// Returns true if UnifiedCollateralReq instances are equal
        /// </summary>
        /// <param name="input">Instance of UnifiedCollateralReq to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(UnifiedCollateralReq input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.CollateralType == input.CollateralType ||
                    this.CollateralType.Equals(input.CollateralType)
                ) && 
                (
                    this.EnableList == input.EnableList ||
                    this.EnableList != null &&
                    input.EnableList != null &&
                    this.EnableList.SequenceEqual(input.EnableList)
                ) && 
                (
                    this.DisableList == input.DisableList ||
                    this.DisableList != null &&
                    input.DisableList != null &&
                    this.DisableList.SequenceEqual(input.DisableList)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = hashCode * 59 + this.CollateralType.GetHashCode();
                if (this.EnableList != null)
                    hashCode = hashCode * 59 + this.EnableList.GetHashCode();
                if (this.DisableList != null)
                    hashCode = hashCode * 59 + this.DisableList.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
